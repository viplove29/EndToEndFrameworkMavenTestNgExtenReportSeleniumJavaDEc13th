name: Run Selenium Tests and Email Reports

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  run-tests:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java environment
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11' # Use the JDK version required for your project

      # Step 3: Cache Maven dependencies to speed up builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      # Step 5: Run Maven tests
      - name: Run Maven Tests
        run: mvn clean test

        # Step 4: Find the Latest Extent Report
        # Uses a shell command to locate the latest dynamically named Extent report in the target directory.
        #Stores the file path in the GitHub Actions environment variable report
      - name: Find Latest Extent Report
        id: find_report
        shell: pwsh # to ensure the run block executes in PowerShell on Windows.
        run: |
          $report = Get-ChildItem -Path target -Filter "ExtentReport_*.html" | Sort-Object LastWriteTime | Select-Object -Last 1
          echo "report=$($report.FullName)" >> $env:GITHUB_ENV
        #Get-ChildItem: Lists files in the target directory that match the pattern ExtentReport_*.html.
        #Sort-Object LastWriteTime: Sorts the files by their last modified time.
        #Select-Object -Last 1: Picks the most recently modified file.
        #echo "report=$($report.FullName)" >> $env:GITHUB_ENV  assigns the file path of the latest report to the environment variable report

        # Step 6: Upload Extent Reports (or other generated files) as artifacts
        # In the Upload Test Reports step, the path includes target/surefire-reports/*.xml and ${{ env.report }} for the dynamic Extent report.

      - name: Upload Test Reports
        if: always() # Always run, even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: Test-Reports
          path: |
            target/surefire-reports/*.xml
            ${{ env.report }}

      # Step 7: Send the Report via Email (using Outlook SMTP server)
      #      In the Send Test Report Email step, the attachments parameter uses ${{ env.report }}
      - name: Send Test Report Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com  # gmail SMTP server
          server_port: 587  # TLS port
          username: ${{ secrets.GMAIL_USERNAME }}  # gmail email address
          password: ${{ secrets.GMAIL_APP_PASSWORD }}  # gmail app password or regular password
          from: ${{ secrets.GMAIL_USERNAME }}  # Sender's email address (same as username)
          to: ${{ secrets.TO_EMAIL }}  # Recipient email (use secret for flexibility)
          subject: "Test Report for my youtube viewers"
          body: "Please find the attached test report."
          attachments: ${{ env.report }}  # Attach the report file (adjust if necessary)